{"entries":[{"timestamp":1727369722222,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":70,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"namespace tiny {\n\n    export enum Mode {\n        Safe = 0,\n        Normal = 1,\n        Sport = 2,\n    }\n\n    export enum Direction {\n        //% blockId=\"Run\" block=\"Run\"\n        Run = 1,\n        //% blockId=\"Back\" block=\"Back\"\n        Back = 2,\n        //% blockId=\"Left\" block=\"Left\"\n        Left = 3,\n        //% blockId=\"Right\" block=\"Right\"\n        Right = 4,\n        //% blockId=\"Stop\" block=\"Stop\"\n        Stop = 5,\n        //% blockId=\"SpinLeft\" block=\"SpinLeft\"\n        SpinLeft = 6,\n        //% blockId=\"SpinRight\" block=\"SpinRight\"\n        SpinRight = 7,\n    }\n\n    export enum Music {\n        //% blockId=\"dadadum\" block=\"dadadum\"\n        dadadum = 0,\n        //% blockId=\"entertainer\" block=\"entertainer\"\n        entertainer,\n        //% blockId=\"prelude\" block=\"prelude\"\n        prelude,\n        //% blockId=\"ode\" block=\"ode\"\n        ode,\n        //% blockId=\"nyan\" block=\"nyan\"\n        nyan,\n        //% blockId=\"ringtone\" block=\"ringtone\"\n        ringtone,\n        //% blockId=\"funk\" block=\"funk\"\n        funk,\n        //% blockId=\"blues\" block=\"blues\"\n        blues,\n        //% blockId=\"birthday\" block=\"birthday\"\n        birthday,\n        //% blockId=\"wedding\" block=\"wedding\"\n        wedding,\n        //% blockId=\"funereal\" block=\"funereal\"\n        funereal,\n        //% blockId=\"punchline\" block=\"punchline\"\n        punchline,\n        //% blockId=\"baddy\" block=\"baddy\"\n        baddy,\n        //% blockId=\"chase\" block=\"chase\"\n        chase,\n        //% blockId=\"ba_ding\" block=\"ba_ding\"\n        ba_ding,\n        //% blockId=\"wawawawaa\" block=\"wawawawaa\"\n        wawawawaa,\n        //% blockId=\"jump_up\" block=\"jump_up\"\n        jump_up,\n        //% blockId=\"jump_down\" block=\"jump_down\"\n        jump_down,\n        //% blockId=\"power_up\" block=\"power_up\"\n        power_up,\n        //% blockId=\"power_down\" block=\"power_down\"\n        power_down,\n    }\n\n    export enum Colors {\n        //% block=red\n        Red = 0xff0000,\n        //% block=orange\n        Orange = 0xffa500,\n        //% block=yellow\n        Yellow = 0xffff00,\n        //% block=green\n        Green = 0x00ff00,\n        //% block=blue\n        Blue = 0x0000ff,\n        //% block=indigo\n        Indigo = 0x4b0082,\n        //% block=violet\n        Violet = 0x8a2be2,\n        //% block=purple\n        Purple = 0xff00ff,\n        //% block=white\n        White = 0xffffff,\n        //% block=black\n        Black = 0x000000,\n    }\n\n    export enum IRState {\n        //% blockId=\"White\" block=\"White Line\"\n        White = 0,\n        //% blockId=\"Black\" block=\"Black Line\"\n        Black = 1,\n    }\n\n    enum State {\n        Idle,\n        Moving,\n    }\n\n    let strip = neopixel.create(DigitalPin.P15, 4, NeoPixelMode.RGB)\n    let _state: State = State.Idle;\n    let _mode: Mode = Mode.Safe;\n    let _speed: number = 125; // 0 .. 255\n    let _maxSpeed = 150;\n    let _stepUnit: number = 200; // ms\n    let _maxStep = 3;\n\n    //% block\n    //% step.defl=1\n    //% group=\"Drive\"\n    export function move(direction?: Direction, step?: number) {\n        motorRun(direction, step);\n    }\n\n    //% block\n    //% group=\"Drive\"\n    export function tank(leftSpeed: number, rightSpeed?: number) {\n        motorTank(leftSpeed, rightSpeed || leftSpeed);\n    }\n\n    //% block\n    //% group=\"Drive\"\n    export function stop() {\n        setPwmMotor(5, 0, 0);\n    }\n\n    //% block\n    //% group=\"Light\"\n    export function lightBack(color?: Colors) {\n        showBackLED(color);\n    }\n\n    //% block\n    //% group=\"Light\"\n    export function lightFront(color?: Colors) {\n        showFrontLED(color);\n    }\n\n    //% block\n    //% group=\"Music\"\n    export function playMusic(music: Music) {\n        // TODO\n    }\n\n    //% block\n    //% group=\"Sensors\"\n    export function getObstacleDistance(): number {\n        return maqueen.Ultrasonic(PingUnit.Centimeters)\n    }\n\n    //% block\n    //% group=\"Sensors\"\n    export function isIrLeft(state: IRState): boolean {\n        // TODO\n        return false\n    }\n\n    //% block\n    //% group=\"Sensors\"\n    export function isIrRight(state: IRState): boolean {\n        // TODO\n        return false\n    }\n\n    //% block\n    //% maxSpeed.defl=150\n    //% maxSpeed.min=0 maxSpeed.max=255\n    //% group=\"Setters\"\n    export function setMaxSpeed(maxSpeed: number) {\n        _maxSpeed = maxSpeed;\n    }\n\n    //% block\n    //% maxStep.defl=3\n    //% maxStep.min=1 maxStep.max=5\n    //% group=\"Setters\"\n    export function setMaxStep(maxStep: number) {\n        _maxStep = maxStep;\n    }\n\n    //% block\n    //% speed.defl=70\n    //% speed.min=0 speed.max=255\n    //% group=\"Setters\"\n    export function setSpeed(speed: number) {\n        _speed = speed;\n    }\n\n    //% block\n    //% mode.defl='safe'\n    //% group=\"Setters\"\n    export function setMode(mode: Mode) {\n        _mode = mode;\n    }\n\n    export function getMode() {\n        return _mode;\n    }\n\n    // helpers\n    // ----------\n\n    function motorRun(direction = Direction.Run, step = 1) {\n        if (_mode === Mode.Safe) {\n            motorRunAdapter(direction, _speed);\n            basic.pause(Math.min(step, _maxStep) * _stepUnit);\n            motorRunAdapter(Direction.Stop, _speed);\n        } else if (_mode === Mode.Normal) {\n            motorRunAdapter(direction, Math.min(_speed, _maxSpeed));\n        } else {\n            motorRunAdapter(direction, _speed);\n        }\n    }\n\n    function motorRunAdapter(d = Direction.Run, speed?: number) {\n        switch (d) {\n            case Direction.Run: {\n                maqueen.motorRun(maqueen.Motors.All, maqueen.Dir.CW, speed)\n                break;\n            }\n            case Direction.Back: {\n                maqueen.motorRun(maqueen.Motors.All, maqueen.Dir.CCW, speed)\n                break;\n            }\n            case Direction.Stop: {\n                maqueen.motorStop(maqueen.Motors.All)\n                break;\n            }\n            case Direction.SpinLeft: {\n                maqueen.motorStop(maqueen.Motors.M1)\n                maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, speed)\n                break;\n            }\n            case Direction.SpinRight: {\n                maqueen.motorStop(maqueen.Motors.M2)\n                maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, speed)\n                break;\n            }\n        }\n    }\n\n    function motorTank(left: number, right: number, step = 1) {\n        const spin = Math.sign(left) != Math.sign(right);\n\n        if (left === 0 && right === 0) setPwmMotor(0, 0, 0);\n        else if (left >= 0 && right >= 0) setPwmMotor(1, left, right, step);\n        else if (left <= 0 && right <= 0) setPwmMotor(2, -left, -right, step);\n        else if (right > left) {\n            if (spin) setPwmMotor(6, Math.abs(left), right, step);\n            else setPwmMotor(3, Math.abs(left), right, step);\n        } else {\n            if (spin) setPwmMotor(7, left, Math.abs(right), step);\n            else setPwmMotor(4, left, Math.abs(right), step);\n        }\n    }\n\n    function getDir(speed: number) {\n        return speed >= 0 ? maqueen.Dir.CW : maqueen.Dir.CCW\n    }\n\n    function setPwmMotor(d: number, speed1: number, speed2: number, step = 1) {\n        if (d < 0 || d > 7) return;\n\n\n        console.log('== tank : ' + _mode);\n\n\n        if (_mode === Mode.Safe) {\n            motorTanlAdapter(d, speed1, speed2)\n            basic.pause(Math.min(step, _maxStep) * _stepUnit);\n            motorTanlAdapter(Direction.Stop)\n        } else if (_mode === Mode.Normal) {\n            speed1 = Math.sign(speed1) * Math.min(Math.abs(speed1), _maxSpeed);\n            speed2 = Math.sign(speed2) * Math.min(Math.abs(speed2), _maxSpeed);\n            motorTanlAdapter(d, speed1, speed2)\n        } else {\n            motorTanlAdapter(d, speed1, speed2)\n        }\n    }\n\n    function motorTanlAdapter(d = Direction.Run, speed1?: number, speed2?: number) {\n        switch (d) {\n            case Direction.Run: {\n                maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, speed1)\n                maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, speed2)\n                break;\n            }\n            case Direction.Back: {\n                maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CCW, speed1)\n                maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CCW, speed2)\n                break;\n            }\n            case Direction.Stop: {\n                maqueen.motorStop(maqueen.Motors.All)\n                break;\n            }\n            case Direction.SpinLeft: {\n                maqueen.motorStop(maqueen.Motors.M1)\n                maqueen.motorRun(maqueen.Motors.M2, maqueen.Dir.CW, speed2)\n                break;\n            }\n            case Direction.SpinRight: {\n                maqueen.motorStop(maqueen.Motors.M2)\n                maqueen.motorRun(maqueen.Motors.M1, maqueen.Dir.CW, speed1)\n                break;\n            }\n        }\n    }\n\n    function showBackLED(c?: Colors): void {\n        if (!c) {\n            showColor(c)\n        } else {\n            showColor(c)\n        }\n    }\n\n\n\n    function showFrontLED(c?: Colors): void {\n        if (!c) {\n            maqueen.writeLED(maqueen.LED.LEDLeft, maqueen.LEDswitch.turnOff)\n            maqueen.writeLED(maqueen.LED.LEDRight, maqueen.LEDswitch.turnOff)\n        } else {\n            maqueen.writeLED(maqueen.LED.LEDLeft, maqueen.LEDswitch.turnOn)\n            maqueen.writeLED(maqueen.LED.LEDRight, maqueen.LEDswitch.turnOn)\n        }\n    }\n\n    function showColor(c: Colors) {\n        c = c >> 0;\n        const { red, green, blue } = setAllRGB(c);\n        strip.showColor(neopixel.rgb(red, green, blue))\n    }\n\n    function unpackR(rgb: number): number {\n        let r = (rgb >> 16) & 0xff;\n        return r;\n    }\n\n    function unpackG(rgb: number): number {\n        let g = (rgb >> 8) & 0xff;\n        return g;\n    }\n\n    function unpackB(rgb: number): number {\n        let b = rgb & 0xff;\n        return b;\n    }\n\n    function setAllRGB(rgb: number) {\n        let red = unpackR(rgb);\n        let green = unpackG(rgb);\n        let blue = unpackB(rgb);\n        return { red, green, blue };\n    }\n}\n"],[0,"\n"]],"start1":0,"start2":0,"length1":10044,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"een-tiny"],[1," - Copy"],[0,"\",\n"],[-1,""],[0,"    \"des"]],"start1":19,"start2":19,"length1":19,"length2":26},{"diffs":[[0," \"*\""],[-1,",\n        \"maqueen\": \"github:dfrobot/pxt-maqueen#v1.7.2\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\""],[0,"\n   "]],"start1":146,"start2":146,"length1":124,"length2":8},{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":243,"start2":243,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1727369722221,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"maqueen-tiny\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1727369936910}